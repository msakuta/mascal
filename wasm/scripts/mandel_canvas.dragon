
fn printdensity(d: i64, x: i64, y: i64) {
  set_fill_style("#00" + hex_string(d) + "00");
  rectangle(x * 4i64, y * 4i64, 4i64, 4i64);
}

/* Determine whether the specific location diverges. */
/* Solve for z = z^2 + c in the complex plane. */
fn mandelconverger(real: f64, imag: f64, iters: i64, creal: f64, cimag: f64) -> i64 {
    for iters in 0 .. 255 {
        if real*real + imag*imag > 4 {
            break;
        };
        var next_r = real*real - imag*imag + creal;
        imag = 2.*real*imag + cimag;
        real = next_r;
    }
    iters
}

/* Return the number of iterations required for the iteration to escape */
fn mandelconverge(real: f64, imag: f64) -> i64 {
  mandelconverger(real, imag, 0, real, imag)
}

/* Compute and plot the mandelbrot set with the specified 2 dimensional range
 info. */
fn mandelhelp(xmin: f64, xmax: f64, xstep: f64,   ymin: f64, ymax: f64, ystep: f64) {
    var steps: i64 = (ymax - ymin) / ystep;
    print("xstep", xstep, "ysteps", steps, "ystep", ystep);
    for iy in 0 .. steps {
        var y = iy as f64 * (ymax - ymin) * ystep as f64 + ymin;
        var xsteps: i64 = (xmax - xmin) / xstep;
        for ix in 0 .. xsteps {
            var x = ix as f64 * (xmax - xmin) * xstep as f64 + xmin;
            printdensity(mandelconverge(x,y), ix as i64, iy as i64);
        }
    }
}


/* mandel - This is a convenient helper function for plotting the mandelbrot set
 from the specified position with the specified Magnification. */
fn mandel(realstart: f64, imagstart: f64, realmag: f64, imagmag: f64) {
    var realend = realstart+realmag*80.;
    var imagend = imagstart+imagmag*80.;
    mandelhelp(realstart, realend, realmag,
               imagstart, imagend, imagmag);
}

mandel(-2.0, -2.0, 0.025, 0.025);
